------------------------------------------EXPERIMENT 20------------------------------------------------------------
-----------------------NoSQL â€“ AGGREGATE FUNCTIONS AND REGULAR EXPRESSIONS-----------------------------------------




1.   Write a MongoDB query to sort customer details in ascending order of their name.

> db.customer.find().sort({name:1})
{ "_id" : ObjectId("62a8190e3f68bb582bdcca31"), "name" : "Ambili", "age" : 21, "address" : "ghi", "city" : "calicut", "phn_no" : 6111111111 }
{ "_id" : ObjectId("62a8190e3f68bb582bdcca32"), "name" : "Reema", "age" : 22, "address" : "jkl", "city" : "tvm", "phn_no" : 6222222222 }
{ "_id" : ObjectId("62a8190e3f68bb582bdcca2f"), "name" : "Shalu", "age" : 18, "address" : "abc", "city" : "calicut", "phn_no" : 9111111111 }
{ "_id" : ObjectId("62a8190e3f68bb582bdcca33"), "name" : "Shirin", "age" : 22, "address" : "mno", "city" : "ekm", "phn_no" : 9999999999 }

-------------------------------------------------------------------------------------------------------------------

2.   Write a MongoDB query to count number of customers in each city.

 >  db.customer.aggregate([{$group:{_id: "$city",total:{$sum:1}}}])
{ "_id" : "tvm", "total" : 1 }
{ "_id" : "ekm", "total" : 1 }
{ "_id" : "calicut", "total" : 2 }

-------------------------------------------------------------------------------------------------------------------

3.   Write a MongoDB query to find minimum and maximum age in each city.

>  db.customer.aggregate([{$group:{_id:"$city",max_age:{$max:"$age"},min_age:{$min:"$age"}}}])
{ "_id" : "tvm", "max_age" : 22, "min_age" : 22 }
{ "_id" : "ekm", "max_age" : 22, "min_age" : 22 }
{ "_id" : "calicut", "max_age" : 21, "min_age" : 18 }



//VERIFIED
